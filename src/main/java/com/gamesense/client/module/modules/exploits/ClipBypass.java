package com.gamesense.client.module.modules.exploits;

import com.gamesense.api.setting.values.BooleanSetting;
import com.gamesense.api.setting.values.IntegerSetting;
import com.gamesense.api.setting.values.ModeSetting;
import com.gamesense.api.util.world.MotionUtil;
import com.gamesense.client.module.Category;
import com.gamesense.client.module.Module;
import com.gamesense.client.module.ModuleManager;
import com.gamesense.client.module.modules.render.Freecam;
import net.minecraft.network.play.client.CPacketPlayer;

import java.util.Arrays;

@Module.Declaration(name = "ClipBypass", category = Category.Exploits)
public class ClipBypass extends Module {

    boolean allowDisable;

    double gamerHP;

    int num;

    double startFlat;
    double newY;



    ModeSetting flightMode = registerMode("FlightMode", Arrays.asList("Flight", "Clip"), "Flight");
    BooleanSetting flat = registerBoolean("Flat", false);
    BooleanSetting forceY = registerBoolean("ForceY", false);
    IntegerSetting forcedY = registerInteger("Forced Y Level", 0,-25,512);
    IntegerSetting packets = registerInteger("Packets", 8,0,280);
    BooleanSetting xz = registerBoolean("XZ", false);
    BooleanSetting y = registerBoolean("Y", true);
    IntegerSetting amountClipXZ = registerInteger("Factor XZ", 7, 0, 256);
    IntegerSetting amountClip = registerInteger("Factor Y", 7, 0, 256);


    public void onEnable() {

        num = 0;
        gamerHP = mc.player.getHealth();
        allowDisable = false;

        startFlat = mc.player.posY;

    }

    @Override
    public void onUpdate() {

        double dir[] = MotionUtil.forward(1);


        for (int i = 0; i < packets.getValue(); i++) {


            if (forceY.getValue()) {

                newY = forcedY.getValue().doubleValue();

            } else {

                newY = mc.player.posY + amountClip.getValue();

            }


            /*NORMAL MODES*/
            if (y.getValue() || mc.gameSettings.keyBindJump.isKeyDown() && flightMode.getValue().equals("Flight")){
                mc.player.connection.sendPacket(new CPacketPlayer.Position(mc.player.posX, newY, mc.player.posZ, false));
                mc.player.connection.sendPacket(new CPacketPlayer.Position(mc.player.posX, mc.player.posY + 0.05, mc.player.posZ, false));
            }

            if (xz.getValue() && mc.gameSettings.keyBindForward.isKeyDown()) {

                mc.player.connection.sendPacket(new CPacketPlayer.Position(mc.player.posX + dir[0] * amountClipXZ.getValue(), newY, mc.player.posZ + dir[1] * amountClipXZ.getValue(), false));

                if (flat.getValue()) {

                    mc.player.connection.sendPacket(new CPacketPlayer.Position(mc.player.posX, mc.player.posY, mc.player.posZ, false));

                }

                mc.player.connection.sendPacket(new CPacketPlayer.Position(mc.player.posX, mc.player.posY+0.05, mc.player.posZ, false));

            }

            num++;

            if (num == 80 && flightMode.getValue().equals("Clip")) {
                disable();
            }
            /*NORMAL MODES*/


        }

        mc.player.connection.sendPacket(new CPacketPlayer.Position(mc.player.posX, mc.player.posY, mc.player.posZ, true));


    }

    public void onDisable() {

        ModuleManager.getModule(Freecam.class).disable();

    }
}
