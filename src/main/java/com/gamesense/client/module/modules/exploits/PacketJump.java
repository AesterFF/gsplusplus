package com.gamesense.client.module.modules.exploits;

import com.gamesense.api.event.events.PlayerJumpEvent;
import com.gamesense.api.setting.values.IntegerSetting;
import com.gamesense.api.util.misc.Timer;
import com.gamesense.api.util.player.PlayerUtil;
import com.gamesense.client.module.Category;
import com.gamesense.client.module.Module;
import com.gamesense.client.module.ModuleManager;
import com.gamesense.client.module.modules.movement.Speed;
import me.zero.alpine.listener.EventHandler;
import me.zero.alpine.listener.Listener;

@Module.Declaration(name = "PacketJump", category = Category.Exploits)
public class PacketJump extends Module {

    IntegerSetting delay = registerInteger("Delay", 0,0,50);

    Timer timer = new Timer();

    @EventHandler
    private final Listener<PlayerJumpEvent> jumpEventListener = new Listener<>(event -> {

        if ((delay.getValue() == 0 || timer.hasReached(delay.getValue(), true) && mc.player.onGround) && !ModuleManager.getModule(Speed.class).isEnabled()) {
            PlayerUtil.fakeJump(true);
            mc.player.setPosition(mc.player.posX, mc.player.posY + 1.1661092609382, mc.player.posZ);
            mc.player.motionY =  -0.0830778178;
            event.cancel();
        }

    });

}
