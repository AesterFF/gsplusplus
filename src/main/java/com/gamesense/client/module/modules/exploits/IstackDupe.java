package com.gamesense.client.module.modules.exploits;

import com.gamesense.api.util.misc.MessageBus;
import com.gamesense.api.util.world.EntityUtil;
import com.gamesense.api.util.world.combat.ac.ACHelper;
import com.gamesense.client.module.Category;
import com.gamesense.client.module.Module;
import com.gamesense.client.module.modules.hud.TargetHUD;
import net.minecraft.entity.Entity;
import net.minecraft.entity.passive.AbstractChestHorse;
import net.minecraft.network.play.client.CPacketEntityAction;
import net.minecraft.network.play.client.CPacketInput;
import net.minecraft.util.EnumHand;

import java.util.Comparator;

@Module.Declaration(name = "IStack Dupe", category = Category.Exploits)
public class IstackDupe extends Module {

    int i;

    @Override
    protected void onEnable() {

        try {
            Entity l_Entity = mc.world.loadedEntityList.stream()
                    .filter(this::isValidEntity)
                    .min(Comparator.comparing(p_Entity -> mc.player.getDistance(p_Entity)))
                    .orElse(null);

            mc.playerController.interactWithEntity(mc.player, l_Entity, EnumHand.MAIN_HAND); // Interact with Donke}
        } catch (NullPointerException e) {

            MessageBus.sendClientPrefixMessage("Disabled due to NullPointerException. (log: )");
            MessageBus.sendClientRawMessage(e.toString());
            disable();

        }
    }

    private boolean isValidEntity(Entity entity)
    {
        if (entity instanceof AbstractChestHorse) {
            AbstractChestHorse l_ChestHorse = (AbstractChestHorse) entity;

            return !l_ChestHorse.isChild() && l_ChestHorse.isTame();
        }

        return false;
    }

}
